% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/assignFeatureDar.R
\name{assignFeatureDar}
\alias{assignFeatureDar}
\alias{assignFeatureDar,GRanges,GRangesList-method}
\title{Assign DAR values to genomic features}
\usage{
assignFeatureDar(features, dar, darVal = c("origin", "region"))

\S4method{assignFeatureDar}{GRanges,GRangesList}(features, dar, darVal = c("origin", "region"))
}
\arguments{
\item{features}{\code{GRanges} object specifying the features of interest.}

\item{dar}{\code{GRangesList} with DAR values of the associated ranges contained
in metadata columns.
Ranges that represent DAR regions are recommended to assign the greatest
number of features with DAR values.
This results in an assigned estimate of DAR in the region surrounding the
feature.
Alternatively, the use of DAR origin ranges results in an assigned average
of DAR solely within the feature.
Ranges can be converted between origins and regions with
\link{flipRanges}.}

\item{darVal}{\code{character(1)} specifying the whether to use origin or region
DAR values for the chosen ranges.
Options are "origin" and "region".
A warning will be produced if the chosen \code{darVal} does not match the
ranges detected in the object provided to the \code{dar} argument, as this is
likely unintended by the user.}
}
\value{
\code{GRangesList} with ranges representing features of interest that
overlap at least one DAR range.
Feature metadata columns are retained and an additional column is added
for the assigned DAR value.
}
\description{
Assign DAR values to genomic features of interest by
averaging the DAR values of ranges that overlap the feature range.
}
\examples{
data("chr1_genes")
fl <- system.file("extdata", "chr1.vcf.bgz", package="darr")
genotypes <- readGenotypes(fl)
groups <- list(
    group1 = c("S2", "S7", "S9", "S10", "S19", "S20"),
    group2 = c("S3", "S6", "S11", "S12", "S15", "S16", "S18")
)
counts <- countAlleles(genotypes, groups)
props <- countsToProps(counts)
contrasts <- matrix(
    data = c(1, -1),
    dimnames = list(
        Levels = c("group1", "group2"),
        Contrasts = c("group1v2")
    )
)
dar <- dar(props, contrasts)
assignFeatureDar(chr1_genes, dar, darVal = "origin")

darRegions <- flipRanges(dar, extendEdges = TRUE)
assignFeatureDar(chr1_genes, darRegions, darVal = "region")

}
